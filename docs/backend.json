{
  "entities": {
    "Client": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Client",
      "type": "object",
      "description": "Represents a client who receives invoices.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Client entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the client."
        },
        "email": {
          "type": "string",
          "description": "Email address of the client.",
          "format": "email"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number of the client."
        },
        "address": {
          "type": "string",
          "description": "Address of the client."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Invoice": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Invoice",
      "type": "object",
      "description": "Represents an invoice issued to a client.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Invoice entity."
        },
        "clientId": {
          "type": "string",
          "description": "Reference to Client."
        },
        "clientName": {
          "type": "string",
          "description": "Name of the client at the time of invoice creation."
        },
        "invoiceNumber": {
          "type": "string",
          "description": "Invoice number for easy tracking."
        },
        "issueDate": {
          "type": "string",
          "description": "Date the invoice was issued.",
          "format": "date"
        },
        "dueDate": {
          "type": "string",
          "description": "Date the invoice is due.",
          "format": "date"
        },
        "totalAmount": {
          "type": "number",
          "description": "Total amount due on the invoice."
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "description": { "type": "string" },
              "quantity": { "type": "number" },
              "unitPrice": { "type": "number" }
            },
            "required": ["description", "quantity", "unitPrice"]
          }
        },
        "notes": {
          "type": "string",
          "description": "Additional notes or terms."
        }
      },
      "required": [
        "id",
        "clientId",
        "clientName",
        "invoiceNumber",
        "issueDate",
        "dueDate",
        "totalAmount",
        "items"
      ]
    },
    "CompanyProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CompanyProfile",
      "type": "object",
      "description": "Stores the user's company profile information.",
      "properties": {
        "companyName": {
          "type": "string",
          "description": "The name of the user's company."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The contact email for the company."
        },
        "phone": {
          "type": "string",
          "description": "The contact phone number for the company."
        },
        "address": {
          "type": "string",
          "description": "The physical address of the company."
        },
        "logoUrl": {
          "type": "string",
          "description": "Data URI of the company logo."
        }
      },
      "required": [
        "companyName",
        "email"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}/clients/{clientId}",
        "definition": {
          "entityName": "Client",
          "schema": {
            "$ref": "#/backend/entities/Client"
          },
          "description": "Stores client data specific to a user. Path-based ownership ensures only the user with ID {userId} can access these clients.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "clientId",
              "description": "The unique identifier of the client."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/invoices/{invoiceId}",
        "definition": {
          "entityName": "Invoice",
          "schema": {
            "$ref": "#/backend/entities/Invoice"
          },
          "description": "Stores invoice data for a specific user. Path-based ownership ensures that only the user with ID {userId} can access these invoices.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "invoiceId",
              "description": "The unique identifier of the invoice."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/companyProfile/profile",
        "definition": {
          "entityName": "CompanyProfile",
          "schema": {
            "$ref": "#/backend/entities/CompanyProfile"
          },
          "description": "Stores the company profile for a user. There is only one profile document per user.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to securely manage clients and invoices for the InvoiceSwift application. Invoices are now stored in a top-level collection per user to simplify queries for listing all invoices, while clients are maintained in a separate collection. This improves query efficiency and maintains clear ownership via path-based security rules."
  }
}
